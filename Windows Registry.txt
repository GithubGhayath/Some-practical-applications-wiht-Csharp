using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Win32;

namespace windows_Registry
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string Path = @"HKEY_CURRENT_USER\Software\MyFirstInfoInWindowsRegistry";

            string ValueName = "ValueName";
            string ValueData = "ValueData";


            //For Write in windows registry
            /*     try
                 {
                     Registry.SetValue(Path, ValueName, ValueData, RegistryValueKind.String);

                     Console.WriteLine("Saved Successfuly");
                 }
                 catch(Exception e) { Console.WriteLine("An Error Ouccerd : " + e.Message); }
            */


            //For Read From windows Registry
            /*         try
                      {
                          ValueData = Registry.GetValue(Path, ValueName, null) as string;  //If find will return value else return null

                          if (ValueData != null)
                          {
                              Console.WriteLine($"The value for name '{ValueName}' is : {ValueData}");
                          }
                          else
                              Console.WriteLine("No value for this name " + ValueName);
                      }
                      catch (Exception e) { Console.WriteLine("An Error Ouccerd : " + e.Message); }
            */

            //For Delete From Windows Registry
            // Specify the registry key path and value name
            string keyPath = @"SOFTWARE\YourSoftware";
            string valueName = "YourValueName";


            try
            {
                // Open the registry key in read/write mode with explicit registry view
                using (RegistryKey baseKey = RegistryKey.OpenBaseKey(RegistryHive.CurrentUser, RegistryView.Registry64))
                {
                    using (RegistryKey key = baseKey.OpenSubKey(keyPath, true))
                    {
                        if (key != null)
                        {
                            // Delete the specified value
                            key.DeleteValue(valueName);


                            Console.WriteLine($"Successfully deleted value '{valueName}' from registry key '{keyPath}'");
                        }
                        else
                        {
                            Console.WriteLine($"Registry key '{keyPath}' not found");
                        }
                    }
                }
            }
            catch (UnauthorizedAccessException)
            {
                Console.WriteLine("UnauthorizedAccessException: Run the program with administrative privileges.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"An error occurred: {ex.Message}");
            }



            Console.ReadKey();
        }
    }
}
