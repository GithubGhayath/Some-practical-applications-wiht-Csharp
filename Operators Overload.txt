using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Operators_Overload
{
    public class Point
    {
        private int X;
        private int Y;
        public Point(int x,int y)
        {
            this.X = x;
            this.Y = y;
        }

        public static Point operator +(Point a, Point b)
        {
            return new Point(a.X + b.X, a.Y + b.Y);
        }
        public static Point operator -(Point a, Point b)
        {
            return new Point(a.X - b.X, a.Y - b.Y);
        }
        public static Point operator *(Point a , Point b) 
        {
            return new Point(a.X * b.X, a.Y * b.Y);
        }
        public static Point operator /(Point a , Point b)
        {
            return new Point(a.X / b.X, a.Y / b.Y);
        }
        public static bool operator ==(Point a, Point b)
        {
            return (a.X == b.X) && (a.Y == b.Y);
        }
        public static bool operator !=(Point a, Point b)
        {
            return (a.X != b.X) || (a.Y != b.Y);
        }
        public string PrintPoint()
        {
            return $"({this.X},{this.Y})";
        }
    }
    internal class Program
    {
        static void Main(string[] args)
        {
            Point p1 = new Point(1, 2);
            Point p2 = new Point(2, 3);

            Point p3 = p1 + p2;

            Point p4 = p2 - p3;

            Point p5 = p3 * p4;

            Point p6 = p3 / p4;

            Console.WriteLine($"P1 = {p1.PrintPoint()}");
            Console.WriteLine($"P2 = {p2.PrintPoint()}");
            Console.WriteLine($"\n\nP1 + P2 = {p3.PrintPoint()}");
            Console.WriteLine($"P2 - P3 = {p4.PrintPoint()}");
            Console.WriteLine($"P3 * P4 = {p5.PrintPoint()}");
            Console.WriteLine($"P3 / P4 = {p6.PrintPoint()}");

            if (p1 == p2)
                Console.WriteLine("\n\np1 = p2");
            else
                Console.WriteLine("\n\nnot equl");

            Console.ReadKey();
        }
    }
}
